# Source of this pipeline code: https://github.com/paskausks/rust-bin-github-workflows
# MIT License - Copyright (c) 2019 Rihards Paskausks
# Modified by
# Copyright (c) 2023 Malte Janz

name: CI

on:
  pull_request:       # trigger on pull requests
  push:
    branches:         # array of glob patterns matching against refs/heads. Optional; defaults to all
      - main        # triggers on pushes that contain changes in main

jobs:
  build:
    name: Build

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
          - build: macos-native
            os: macos-latest
          - build: macos-silicon
            os: macos-latest
          - build: windows
            os: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install latest stable Rust version (native)
      uses: dtolnay/rust-toolchain@stable
      if: matrix.build != 'macos-silicon'
    - name: Install latest stable Rust version (cross-compile)
      uses: dtolnay/rust-toolchain@stable
      if: matrix.build == 'macos-silicon'
      with:
        target: aarch64-apple-darwin
    - uses: Swatinem/rust-cache@v2
    - name: Cargo build (native)
      if: matrix.build != 'macos-silicon'
      run: cargo build --verbose
    - name: Cargo build (cross-compile)
      if: matrix.build == 'macos-silicon'
      run: cargo build --verbose --target aarch64-apple-darwin
    - name: Cargo test
      if: matrix.build != 'macos-silicon' # can't execute tests for another platform binary
      run: cargo test --verbose --all-features

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install latest stable Rust version
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - uses: Swatinem/rust-cache@v2
    - name: Run cargo fmt
      run: cargo fmt -- --check

  clippy_check:
    name: Clippy check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install latest stable Rust version
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - uses: giraffate/clippy-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          clippy_flags: --all-features
          reporter: 'github-pr-review'
